{"version":3,"file":"static/js/762.539b6e7e.chunk.js","mappings":"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","sources":["components/SharedLayout/LoadingDots.js","components/SharedLayout/SharedLayout.styled.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.js","pages/MovieDetails.styled.js","pages/MovieDetails.js","services/api.js"],"sourcesContent":["import { LoadingDots, Dot } from './SharedLayout.styled'; \n\n\nexport const LoadingIndicator = () => {\n  return (\n\n    <LoadingDots>\n      <Dot delay=\"0s\" />\n      <Dot delay=\".2s\" />\n      <Dot delay=\".4s\" />\n    </LoadingDots>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledHeader = styled.header`\nmin-height: 80px;\nmargin-bottom: 16px;\nborder-bottom: 1px solid #2a363b;\npadding: 20px 30px;\ntext-align: center;\n\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  display: inline-block;\n  font-size: 24px;\n  font-weight: 500;\n  text-decoration: none;\n  transition: color 0.2s ease-in-out;\n  color: #000000;\n\n  &:not(:last-child) {\n    margin-right: 40px;\n  }\n\n  &.active,\n  &:hover,\n  &:focus {\n  color: #8f28aa;\n  text-decoration: underline;\n  }\n`;\n\nexport const LoadingDots = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n`;\n\nexport const Dot = styled.div`\n  display: inline-block;\n  width: 20px;\n  height: 20px;\n  margin-right: 10px;\n  border-radius: 50%;\n  background-color: #1c85ff;\n `;","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieCardContainer = styled.div`\n  display: flex;\n  gap: 40px;\n  margin-top: 20px;\n`;\n\nexport const Img = styled.img`\n  height: 500px;\n  width: 300px;\n`;\n\nexport const MovieInfo = styled.div`\n  padding-top: 20px;\n  max-width: 1100px;\n`;\n\nexport const MovieName = styled.h2`\n  margin-bottom: 20px;\n`;\n\nexport const MovieInfoText = styled.p`\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const MovieInfoTextBold = styled.span`\n  display: block;\n  margin-bottom: 20px;\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const MoreInfoWrapper = styled.div`\n  margin-top: 20px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  border-top: 1px solid #d3d3d3;\n  border-bottom: 1px solid #d3d3d3;\n`;\n\nexport const MoreInfoHeader = styled.h3`\n  font-size: 25px;\n  font-weight: 500;\n`;\n\nexport const List = styled.ul`\n  margin-top: 20px;\n  display: flex;\n  gap: 20px;\n  font-size: 18px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const StyledLink = styled(Link)`\n  font-size: 16px;\n  margin-right: 5px;\n  padding: 5px 15px;\n  border: 1px solid #0d57aa;\n  border-radius: 6px;\n  background-color: #b5d1f2;\n  box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.2);\n  transition: all 0.2s ease-in-out;\n  text-decoration: none;\n  color: #0d57aa;\n\n  &:hover,\n  &:focus {\n    background-color: #0d57aa;\n    color: #ffffff;\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);\n  }\n`;","import { useLocation } from 'react-router-dom'; \nimport PropTypes from 'prop-types';\nimport {\n  Img,\n  List,\n  ListItem,\n  MoreInfoHeader,\n  MoreInfoWrapper,\n  MovieCardContainer,\n  MovieInfo,\n  MovieInfoText,\n  MovieInfoTextBold,\n  MovieName,\n  StyledLink,\n} from './MovieCard.styled.js'; \nimport { LoadingIndicator } from 'components/SharedLayout/LoadingDots'; \n\nconst MovieCard = ({ movie }) => {\n  const { title, release_date, poster_path, vote_average, overview, genres } =\n  movie;\n  const location = useLocation(); \n  const releaseDate = new Date(release_date);\n\n  \n  const releaseYear = isNaN(releaseDate)\n    ? 'Unknown'\n    : releaseDate.getFullYear();\n\n  \n  const posterUrl = poster_path\n    ? `https://image.tmdb.org/t/p/w400/${poster_path}`\n    : 'https://via.placeholder.com/400x600.png?text=Poster+Not+Available';\n\n  \n  const userScore = vote_average\n    ? `${(vote_average * 10).toFixed(0)}%`\n    : 'Not rated yet';\n\n \n  if (!title) {\n    return <LoadingIndicator />;\n  }\n\n  return (\n    <>\n      <MovieCardContainer>\n        <Img src={posterUrl} alt={`${title} poster`} />\n\n        <MovieInfo>\n          <MovieName>\n            {title ?? 'Unknown'} ({releaseYear})\n          </MovieName>\n          <MovieInfoText>User Score: {userScore}</MovieInfoText>\n          <MovieInfoText>\n            <MovieInfoTextBold>Overview:</MovieInfoTextBold> {overview}\n          </MovieInfoText>\n\n         \n          {genres && genres.length > 0 && (\n            <MovieInfoText>\n              <MovieInfoTextBold>Genres:</MovieInfoTextBold>\n              {genres.map(genre => genre.name).join(', ')}\n            </MovieInfoText>\n          )}\n        </MovieInfo>\n\n      </MovieCardContainer>\n\n      <MoreInfoWrapper>\n        <MoreInfoHeader>Additional information</MoreInfoHeader>\n\n        <List>\n          <ListItem>\n            <StyledLink\n              to=\"cast\"\n              state={{ from: location?.state?.from ?? '/' }} \n            >\n              Cast\n            </StyledLink>\n          </ListItem>\n\n          <ListItem>\n            <StyledLink\n              to=\"reviews\"\n              state={{ from: location?.state?.from ?? '/' }}\n            >\n              Reviews\n            </StyledLink>\n          </ListItem>\n        </List>\n\n      </MoreInfoWrapper>\n    </>\n  );\n};\n\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({ name: PropTypes.string.isRequired })\n    ),\n  }).isRequired,\n};\n\nexport default MovieCard;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 20px 40px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  font-size: 14px;\n  border: 1px solid #8e57dd;\n  border-radius: 4px;\n  background-color: #d5d1f2;\n\n  transition: color 0.2s ease-in-out, background-color 0.2s ease-in-out;\n\n  &:hover,\n  &:focus {\n    background-color: #0d88aa;\n    color: #ffffff;\n  }\n`;\n","import { Suspense } from 'react'; \nimport { useEffect, useState } from 'react'; \nimport { useParams, Outlet, useLocation, Link } from 'react-router-dom'; \nimport { BsArrowLeftShort } from 'react-icons/bs'; \nimport { fetchMovieById } from '../services/api'; \nimport MovieCard from '../components/MovieCard/MovieCard';\nimport { Button, Container } from './MovieDetails.styled';\nimport { LoadingIndicator } from 'components/SharedLayout/LoadingDots';\n\nconst MovieDelails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [selectedMovie, setSelectedMovie] = useState({});\n\n  \n  useEffect(() => {\n    const fetchSelectedMovie = async movieId => {\n      try {\n        const movieData = await fetchMovieById(movieId);\n        setSelectedMovie(movieData);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchSelectedMovie(movieId);\n  }, [movieId]);\n\n  return (\n    <main>\n      <Container>\n\n        \n        <Link to={location?.state?.from ?? '/'}>\n          <Button type=\"button\">\n            <BsArrowLeftShort\n              style={{ width: '25px', height: '25px', display: 'inline-block' }}\n            />\n            Go back\n          </Button>\n        </Link>\n\n        <MovieCard movie={selectedMovie} /> \n\n        \n        <Suspense fallback={<LoadingIndicator />}>\n          <Outlet />\n        </Suspense>\n      </Container>\n    </main>\n  );\n};\n\nexport default MovieDelails;","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org';\nconst API_KEY = 'bb00c87e78ddd66ea4c5ea1d581bcd49';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const fetchMovieByName = async query => {\n  const { data } = await axios.get(\n    `${baseURL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};"],"names":["LoadingIndicator","delay","StyledHeader","styled","StyledNavLink","NavLink","LoadingDots","Dot","MovieCardContainer","Img","MovieInfo","MovieName","MovieInfoText","MovieInfoTextBold","MoreInfoWrapper","MoreInfoHeader","List","ListItem","StyledLink","Link","movie","title","release_date","poster_path","vote_average","overview","genres","location","useLocation","releaseDate","Date","releaseYear","isNaN","getFullYear","posterUrl","userScore","toFixed","src","alt","length","map","genre","name","join","to","state","from","Container","Button","movieId","useParams","useState","selectedMovie","setSelectedMovie","useEffect","fetchSelectedMovie","fetchMovieById","movieData","console","log","type","style","width","height","display","Suspense","fallback","baseURL","API_KEY","fetchTrendMovies","axios","data","fetchMovieByName","query","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}